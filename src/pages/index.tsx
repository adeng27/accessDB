import Head from "next/head";
import Link from "next/link";
import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";

import { api, RouterOutputs } from "~/utils/api";

export default function Home() {
  const { data: allResources } = api.resource.getAll.useQuery();
  const { data: filteredResources, status: filterStatus, error: filterError } = api.resource.filter.useQuery({ name: "dickens" })
  const { data: allCriteria } = api.criteria.getAll.useQuery();
  const user = useUser();

  type CriteriaObj = RouterOutputs["criteria"]["getAll"][number];
  
  const CriteriaView = (props: CriteriaObj) => {
    const { id, disabilityType } = props;
    return (
      <div key={id}>
        {disabilityType ? disabilityType : "sugma"}
      </div>
    )
  }

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full border-x w-full md:max-w-2xl">
          <div>
            {!user.isSignedIn && <SignInButton />}
            {!!user.isSignedIn && <SignOutButton />}
          </div>
          <div>
            {allResources?.map((resource1) => (<div key={resource1.id}>{resource1.name}</div>))}
          </div>
          <div>
            {filterStatus === "loading" && <div>Is loading...</div>}
            {filteredResources?.map((resource) => (<div key={resource.id}>{resource.description}</div>))}
          </div>
          <div>
            {allCriteria?.map((oneCriteria) => (
              <CriteriaView {...oneCriteria} key={oneCriteria.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
}
